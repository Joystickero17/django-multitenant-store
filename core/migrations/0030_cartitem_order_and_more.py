# Generated by Django 4.1.3 on 2022-12-11 03:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0029_remove_info_first_name_remove_info_last_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveBigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('fcca814f-7d9a-43e9-970d-37adef2421ce'), help_text='Campo de identificacion unico', primary_key=True, serialize=False)),
                ('paid', models.BooleanField(default=False, help_text='Campo para saber si la orden fue pagada')),
                ('external_payment_id', models.CharField(help_text='Las procesadoras de pago generan un id externo cuando se hace una compra, ese id debe guardarse aqui', max_length=255, null=True)),
                ('payment_method', models.CharField(choices=[('paypal', 'Paypal'), ('coinbase', 'Coinbase crypto')], help_text='metodo elegido para el pago', max_length=255)),
                ('receipt', models.FileField(help_text='Campo para hacer referencia a la ubicacion relativa del archivo del recibo de compra', null=True, upload_to='media/')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de la Compra')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de modificacion de la compra')),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='productorder',
            name='unique_cart_product_order',
        ),
        migrations.RemoveField(
            model_name='productorder',
            name='cart',
        ),
        migrations.RemoveField(
            model_name='productorder',
            name='purchase',
        ),
        migrations.DeleteModel(
            name='Purchase',
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(help_text='Usuario que creo la orden', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cart'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_product_items', to='core.products'),
        ),
        migrations.AddField(
            model_name='productorder',
            name='order',
            field=models.ForeignKey(help_text='Orden principal', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.order'),
        ),
        migrations.AddConstraint(
            model_name='productorder',
            constraint=models.UniqueConstraint(models.F('order'), models.F('product'), name='unique_product_order', violation_error_message='No pueden haber mas de 2 ordenes de producto por orden principal'),
        ),
        migrations.AddConstraint(
            model_name='cartitem',
            constraint=models.UniqueConstraint(models.F('cart'), models.F('product'), name='unique_cart_product_item', violation_error_message='No pueden haber mas de 2 ordenes de producto por carrito'),
        ),
    ]
